licenses(["notice"])  # Apache 2.0

package(default_visibility = ["//tools/build_defs:internal_pkg"])

load("@build_bazel_rules_apple//apple:ios.bzl", "ios_unit_test")

# public libraries

objc_library(
    name = "objc",
    hdrs = [
        "TINKAead.h",
        "TINKKeysetHandle.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":aead",
        ":keyset_handle",
    ],
)

objc_library(
    name = "aead",
    hdrs = ["TINKAead.h"],
    visibility = ["//visibility:public"],
)

objc_library(
    name = "keyset_handle",
    srcs = ["core/TINKKeysetHandle.mm"],
    hdrs = [
        "TINKKeysetHandle.h",
        "core/TINKKeysetHandle_Internal.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":aead",
        ":keyset_reader",
        "//cc:keyset_handle",
        "//cc/util:status",
        "//objc/aead:aead_internal",
        "//objc/util:errors",
        "//objc/util:strings",
        "//proto:all_objc_proto",
        "@com_google_absl//absl/strings",
    ],
)

objc_library(
    name = "mac",
    hdrs = [
        "TINKMac.h",
    ],
    visibility = ["//visibility:public"],
)

objc_library(
    name = "key_manager",
    hdrs = [
        "TINKKeyManager.h",
    ],
    visibility = ["//visibility:public"],
)

objc_library(
    name = "hybrid_decrypt",
    hdrs = [
        "TINKHybridDecrypt.h",
    ],
    visibility = ["//visibility:public"],
)

objc_library(
    name = "hybrid_encrypt",
    hdrs = [
        "TINKHybridEncrypt.h",
    ],
    visibility = ["//visibility:public"],
)

objc_library(
    name = "keyset_reader",
    srcs = ["core/TINKKeysetReader.mm"],
    hdrs = [
        "TINKKeysetReader.h",
        "core/TINKKeysetReader_Internal.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//cc:keyset_reader",
        "//proto:all_objc_proto",
    ],
)

objc_library(
    name = "binary_keyset_reader",
    srcs = ["core/TINKBinaryKeysetReader.mm"],
    hdrs = [
        "TINKBinaryKeysetReader.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":keyset_reader",
        "//cc:binary_keyset_reader",
        "//objc/util:errors",
        "//objc/util:strings",
        "//proto:all_objc_proto",
        "@com_google_absl//absl/strings",
    ],
)

objc_library(
    name = "cleartext_keyset_handle",
    srcs = ["core/TINKKeysetHandle+Cleartext.mm"],
    hdrs = [
        "TINKKeysetHandle+Cleartext.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":keyset_handle",
        ":keyset_reader",
        "//cc:cleartext_keyset_handle",
        "//objc/util:errors",
        "//proto:all_objc_proto",
    ],
)

objc_library(
    name = "config",
    srcs = ["core/TINKConfig.mm"],
    hdrs = [
        "TINKConfig.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":registry_config",
        "//cc:config",
        "//objc/util:errors",
        "//objc/util:strings",
        "//proto:all_objc_proto",
    ],
)

objc_library(
    name = "version",
    srcs = [],
    hdrs = [
        "TINKVersion.h",
    ],
    visibility = ["//visibility:public"],
)

objc_library(
    name = "all_config",
    srcs = ["core/TINKAllConfig.mm"],
    hdrs = [
        "TINKAllConfig.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":registry_config",
        "//cc/config:tink_config",
        "//cc/util:errors",
        "//objc:version",
        "//objc/util:errors",
        "//objc/util:strings",
        "//proto:all_objc_proto",
    ],
)

objc_library(
    name = "registry_config",
    srcs = ["core/TINKRegistryConfig.mm"],
    hdrs = [
        "TINKRegistryConfig.h",
        "core/TINKRegistryConfig_Internal.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":config_pb",
        ":version",
    ],
)

cc_library(
    name = "aes_gcm_pb",
    deps = [
        "//proto:aes_gcm_cc_proto",
    ],
)

cc_library(
    name = "config_pb",
    deps = [
        "//proto:config_cc_proto",
    ],
)

cc_library(
    name = "tink_pb",
    deps = [
        "//proto:tink_cc_proto",
    ],
)

############################
#         Tests            #
############################

ios_unit_test(
    name = "TinkTests",
    minimum_os_version = "9.0",
    deps = [
        ":UnitTestLib",
    ],
)

objc_library(
    name = "UnitTestLib",
    testonly = 1,
    srcs = glob([
        "Tests/UnitTests/**/*.m",
        "Tests/UnitTests/**/*.mm",
    ]),
    hdrs = glob([
        "Tests/UnitTests/**/*.h",
    ]),
    deps = [
        ":aead",
        ":aes_gcm_pb",
        ":all_config",
        ":binary_keyset_reader",
        ":cleartext_keyset_handle",
        ":config",
        ":registry_config",
        ":tink_pb",
        ":version",
        "//cc:aead",
        "//cc:crypto_format",
        "//cc:keyset_handle",
        "//cc/aead:aead_config",
        "//cc/aead:aead_factory",
        "//cc/aead:aes_gcm_key_manager",
        "//cc/util:status",
        "//cc/util:test_util",
        "//objc/aead:aead_config",
        "//objc/aead:aead_factory",
        "//objc/aead:aead_internal",
        "//objc/util:strings",
        "//proto:all_objc_proto",
    ],
)
